@layer layout {
  .container {
    width: 100%;
    position: relative;
    transition: opacity 0.4s var(--bezierFastoutSlowin);

    &[data-loading='true'] {
      opacity: 0;
    }
  }

  .skip {
    isolation: isolate;
    color: var(--background);
    z-index: var(--zIndex4);

    &:focus {
      padding: var(--spaceS) var(--spaceM);
      position: fixed;
      top: var(--spaceM);
      left: var(--spaceM);
      text-decoration: none;
      font-weight: var(--fontWeightMedium);
      line-height: 1;
      box-shadow: 0 0 0 4px var(--background), 0 0 0 8px var(--text);
    }

    &::before {
      content: '';
      position: absolute;
      inset: 0;
      background-color: var(--primary);
      clip-path: polygon(
        0 0,
        100% 0,
        100% calc(100% - 8px),
        calc(100% - 8px) 100%,
        0 100%
      );
      z-index: -1;
    }
  }
}

@layer base {
  :global(:root) {
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }

  :global(:where(html, body)) {
    min-height: 100%;
    width: 100%;
  }

  :global(:where(*, *::before, *::after)) {
    box-sizing: border-box;
    margin: 0;
    min-width: 0;
  }

  :global(:where(input, textarea, select, button)) {
    font: inherit;
    color: inherit;
    border: 0;
    padding: 0;
    background-color: transparent;
    border-radius: 0;
    appearance: none;
  }

  :global(:where(button, a)) {
    touch-action: manipulation;
  }

  :global(:where(svg, img, picture, video, iframe, canvas)) {
    display: block;
  }

  :global(:any-link) {
    text-decoration: none;
  }

  :global(ul) {
    padding: 0;
  }
}

@custom-media --mediaDesktop (max-width: 2080px);
@custom-media --mediaLaptop (max-width: 1680px);
@custom-media --mediaTablet (max-width: 1040px);
@custom-media --mediaMobile (max-width: 696px);
@custom-media --mediaMobileLS (max-height: 696px);
@custom-media --mediaMobileS (max-width: 400px);
@custom-media --mediaUseMotion (prefers-reduced-motion: no-preference);
@custom-media --mediaReduceMotion (prefers-reduced-motion: reduce);
@custom-media --mediaTouch (pointer: coarse);
@custom-media --mediaNoTouch (pointer: fine);

@layer base {
  :global(:root) {
    --mobileNavOffset: calc(var(--spaceOuter) * 2 + var(--space2XL));
  }

  :global(html, body) {
    font-family: var(--fontStack);
    font-weight: var(--fontWeightRegular);
    background-color: var(--background);
    transition: var(--durationM) ease;
    transition-property: background, opacity;
    color: var(--textBody);
    width: 100vw;
    overflow-x: hidden;
    opacity: 1;

    &:focus {
      outline: none;
    }
  }

  :global(:where(code, pre)) {
    font-family: var(--monoFontStack);
  }

  :global(::selection) {
    background: var(--accent);
    color: var(--black);
  }

  :global(:focus) {
    outline: 4px solid var(--text);
    outline-offset: 4px;
  }

  :global(:focus:not(:focus-visible)) {
    outline: none;
  }

  @keyframes :global(fade-in) {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  @keyframes :global(reveal) {
    0% {
      transform: scale3d(0, 1, 1);
      transform-origin: left;
    }

    50% {
      transform: scale3d(1, 1, 1);
      transform-origin: left;
    }

    51% {
      transform: scale3d(1, 1, 1);
      transform-origin: right;
    }

    100% {
      transform: scale3d(0, 1, 1);
      transform-origin: right;
    }
  }
}
